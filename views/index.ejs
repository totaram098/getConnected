<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Socket.IO</title>
    <script
      src="https://kit.fontawesome.com/028ed337d2.js"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="../assets/css/style.css" />
  </head>
  <body>
    <div id="container">
      <div class="messageContainer"></div>
      <!-- side menu -->
      <div class="sideMenu">
        <div style="background-color: rgb(18, 188, 245)">
          <div
            style="
              display: flex;
              padding: 5px 10px 5px 10px;
              position: sticky;
              justify-content: space-between;
              align-items: center;
            "
          >
            <div id="back">
              <i class="fa-solid fa-arrow-left fa-2x"></i>
            </div>
            <div>
              <h3 style="padding: 0; margin: 0; margin-bottom: 5px">
                GET CONNECTED
              </h3>
              <a href="/logout" class="logout"
                ><img src="assets/images/logout.png" alt="" /> Logout</a
              >
            </div>

            <div>
              <span
                class="closeOpt"
                style="float: right; margin: 5px 5px auto auto; cursor: pointer"
                ><i class="fa-solid fa-xmark fa-2x"></i
              ></span>
            </div>
          </div>
        </div>
        <ul style="padding: 0 3px; margin: 0" id="friendProfileContainer">
          <!-- add friend -->
          <!-- <div class="addUser">
            <img src="assets/images/profile.jpg" alt="" />
            <div>
              <h4 style="margin: 3px">Mahesh Kumar Harijan</h4>
              <button>ADD</button>
              <button>REMOVE</button>
            </div>
          </div> -->
          <!-- friend request -->
          <!-- <div class="friendRequest">
            <img src="assets/images/profile.jpg" alt="" />
            <div>
              <h4 style="margin: 3px">Mahesh Kumar Harijan</h4>
              <button>ACCEPT</button>
              <button>REMOVE</button>
            </div>
          </div> -->
          <!-- chat -->
          <!-- <div class="friendProfile">
            <img src="assets/images/profile.jpg" alt="" />
            <h4>Mahesh Kumar Harijan</h4>
          </div> -->

          <div class="option" id="addUser" onClick="addUser()">
            <h4>ADD FRIENDS</h4>
          </div>
          <div class="option" id="userRequest" onClick="userRequest()">
            <h4>FRIENDS REQUEST</h4>
          </div>
          <div class="option" id="allUser" onClick="allUser()">
            <h4>ALL FRIENDS</h4>
          </div>
        </ul>
      </div>
      <!-- /side menu -->

      <!-- chat top bar buttons  -->
      <div class="btnContainer">
        <!-- <div class="userProfile" data-id="">
          <div style="width: 20%; display: flex; justify-content: center">
            <img
              src="/assets/images/profile.jpg"
              alt="images"
              style="width: 60px; height: 60px; border-radius: 50%"
            />
          </div>
          <div style="width: 80%; text-align: center">
            <h3 style="padding: 0; margin: 0">Totaram Meghwar</h3>
            <span style="font-size: 13px">10:39 PM,12 DEC 2023</span>
          </div>
        </div> -->
        <span class="optionBtn"
          ><i class="fa-sharp fa-solid fa-bars fa-2x"></i
        ></span>
      </div>

      <!-- /chat top bar buttons  -->

      <!-- messages div -->
      <div style="height: 500px; display: flex; align-items: flex-end">
        <div
          style="width: 100%; padding: 10px; height: 95%; overflow-y: scroll"
          id="chatContainer"
        >
          <p style="text-align: center; font-size: 2em">
            WELCOME <br />TO<br />
            GET CONNECTED<br />
            CHAT APP
          </p>
        </div>
      </div>
      <!-- /messages div -->
      <div class="replayContainer" style="display: flex">
        <input type="text" id="message" style="width: 87%" />
        <input type="submit" name="" id="send" value="SEND >>" />
      </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>

    <script>
      const socket = io();
      const parentDiv = document.querySelector(".btnContainer");

      const childDiv = parentDiv.querySelector(".userProfile");
      if (!childDiv) {
        document.getElementById("message").setAttribute("disabled", "");
        document.getElementById("send").setAttribute("disabled", "");
      }

      userId = `<%= user.id %>`;
      socket.on(userId, (data) => {
        callhim(data);
      });
      function callhim(data) {
        const parentDiv = document.querySelector(".btnContainer");

        const childDiv = parentDiv.querySelector(".userProfile");
        if (childDiv) {
          const senderId = document
            .querySelector(".userProfile")
            .getAttribute("data-id");
          if (senderId == data.userId) {
            const chatBox = document.getElementById("chatContainer");
            const messagesBox = `<h5 class="from">
                            <span>${data.name}</span>
                            <span>${data.message}
                            </span>
                          </h5>`;
            chatBox.insertAdjacentHTML("beforeend", messagesBox);
            chatBox.scrollTop = chatBox.scrollHeight;
          }
        }
      }
      document
        .getElementsByClassName("closeOpt")[0]
        .addEventListener("click", () => {
          document
            .getElementsByClassName("sideMenu")[0]
            .classList.remove("active");
        });

      document
        .getElementsByClassName("optionBtn")[0]
        .addEventListener("click", () => {
          document
            .getElementsByClassName("sideMenu")[0]
            .classList.add("active");
        });

      document.querySelector("#back").addEventListener("click", () => {
        document.getElementById(
          "friendProfileContainer"
        ).innerHTML = `<div class="option" id="addUser" onClick = addUser()>
                  <h4>ADD FRIENDS</h4>
                </div>
                <div class="option" id="userRequest" onClick = userRequest()>
                  <h4>FRIENDS REQUEST</h4>
                </div>
                <div class="option" id="allUser" onClick = allUser()>
                  <h4>ALL FRIENDS</h4>
                </div>`;
        back("none");
      });

      // send message to other
      document.getElementById("send").addEventListener("click", () => {
        const message = document.getElementById("message").value;
        if (message == "") {
          alertBox("Message can not be empty.");
        } else {
          const senderId = document
            .querySelector(".userProfile")
            .getAttribute("data-id");
          var params = {
            message: message,
            senderId: senderId,
          };
          fetch("http://localhost:3000/addMessage", {
            method: "POST",
            body: JSON.stringify(params),
            headers: { "Content-Type": "application/json" },
          })
            .then((response) => response.json())
            .then((data) => {
              try {
                if (data.length == 0) {
                  alertBox("Message failed!");
                } else if (data) {
                  const chatContainer =
                    document.getElementById("chatContainer");
                  const messageBox = `<h5 class="from">
                                            <span>You</span>
                                            <span>${message}
                                            </span>
                                          </h5>`;
                  chatContainer.insertAdjacentHTML("beforeend", messageBox);
                  alertBox(data.Message);

                  chatContainer.scrollTop = chatContainer.scrollHeight;

                  document.getElementById("message").value = "";
                } else {
                  alertBox("Something went wrong");
                }
              } catch (error) {
                alertBox("Connection Error! Please try agian.");
                console.log(error);
              }
            })
            .catch((error) => alertBox("connection issue!"));
        }
      });
      function alertBox(message) {
        document.querySelector(".messageContainer").innerText = message;
        document
          .querySelector(".messageContainer")
          .classList.add("messageAnim");
        setTimeout(() => {
          document
            .querySelector(".messageContainer")
            .classList.remove("messageAnim");
        }, 3000);
      }

      function back(display) {
        return (document.getElementById("back").style.display = display);
      }

      function addUser() {
        fetch("http://localhost:3000/getUsers", {
          method: "GET",
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            divs = "";
            try {
              if (data.length == 0) {
                alertBox("No Friend found to add!");
              } else if (data) {
                data.map((value, key) => {
                  divs =
                    divs +
                    `
                <div class="addUser">
                  <img src="assets/images/profile.jpg" alt="" />
                  <div>
                    <h4 style="margin: 3px">${value.name.toUpperCase()}</h4>
                    <button onClick= addFriend(this,${value.id})>ADD</button>
                    <button onClick= removeFriend(this,${
                      value.id
                    })>REMOVE</button>
                  </div>
                </div>`;
                });

                document.getElementById("friendProfileContainer").innerHTML =
                  divs;
                back("block");
              } else {
                console.log("Something went wrong");
              }
            } catch (error) {
              console.log("Something went wrong");
            }
          })
          .catch((error) => console.error(error));
      }

      // userRequest
      function userRequest() {
        var params = {
          status: false,
        };
        fetch("http://localhost:3000/getFriendRequest", {
          method: "POST",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            divs = "";
            try {
              if (data.length == 0) {
                alertBox("No Friend Request Found!");
              } else if (data) {
                data.map((value, key) => {
                  divs =
                    divs +
                    `
                      <div class="friendRequest">
                  <img src="assets/images/profile.jpg" alt="" />
                  <div>
                    <h4 style="margin: 3px">${value.name.toUpperCase()}</h4>
                    <button onClick= confirmReq(this,${
                      value.id
                    })>ACCEPT</button>
                    <button onClick= removeReq(this,${value.id})>REMOVE</button>
                  </div>
                </div>`;
                });

                document.getElementById("friendProfileContainer").innerHTML =
                  divs;
                back("block");
              } else {
                console.log("Something went wrong");
              }
            } catch (error) {
              console.log(error);
            }
          })
          .catch((error) => console.error(error));
      }

      // allUser
      function allUser() {
        var params = {
          status: true,
        };
        fetch("http://localhost:3000/getRequest", {
          method: "POST",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            try {
              divs = "";

              if (data.length == 0) {
                alertBox("No Friend Found!");
              } else if (data) {
                data.map((value, key) => {
                  divs =
                    divs +
                    `
                          <div class="friendProfile" onClick=getMessage(${
                            value.id
                          })>
                  <img src="assets/images/profile.jpg" alt="" />
                  <h4>${value.name.toUpperCase()}</h4>
                </div>`;
                });

                document.getElementById("friendProfileContainer").innerHTML =
                  divs;
                back("block");
              } else {
                console.log("Something went wrong 1");
              }
            } catch (e) {
              console.log(e);
            }
          })
          .catch((error) => console.error(error));
      }

      //get Messages
      function getMessage(id) {
        var params = {
          senderId: id,
        };
        fetch("http://localhost:3000/getMessage", {
          method: "POST",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            try {
              divs = "";

              if (data.length == 0) {
                alertBox("There is no any message.");
              } else if (data) {
                const name = data["user"][0].name;
                const profile = data["user"][0].profile;
                const parentDiv = document.querySelector(".btnContainer");

                const childDiv = parentDiv.querySelector(".userProfile");
                var node;
                if (childDiv) {
                  node = document.querySelector(".userProfile");
                  node.setAttribute("data-id", id);
                } else if (!childDiv) {
                  node = document.createElement("div");
                  node.classList.add("userProfile");
                  node.setAttribute("data-id", id);
                }
                node.innerHTML = `<div style="width: 20%; display: flex; justify-content: center">
                      <img
                      src="${profile}"
                      alt="images"
                      style="width: 60px; height: 60px; border-radius: 50%"
                      />
                      </div>
                      <div style="width: 80%; text-align: center">
                      <h3 style="padding: 0; margin: 0">${name}</h3>
                      <span style="font-size: 13px">10:39 PM,12 DEC 2023</span>
                      </div>`;
                const container = document.querySelector(".btnContainer");
                const target = document.querySelector(".optionBtn");
                container.insertBefore(node, target);
                document.getElementById("message").removeAttribute("disabled");
                document.getElementById("send").removeAttribute("disabled");
                data["message"].map((value, key) => {
                  if (id == value.recieverId) {
                    divs =
                      divs +
                      `  <h5 class="from">
                                 <span>You</span>
                                 <span>${value.message}</span>
                                </h5>`;
                  } else if (value.recieverId) {
                    divs =
                      divs +
                      `<h5 class="to">
                                <span>${name}</span
                                ><span>
                                  ${value.message}
                                </span>
                              </h5>
                            `;
                  }
                });

                chatBox = document.getElementById("chatContainer");
                chatBox.innerHTML = divs;
                chatBox.scrollTop = chatBox.scrollHeight;
                document
                  .getElementsByClassName("sideMenu")[0]
                  .classList.remove("active");
              } else {
                console.log("Something went wrong 1");
              }
            } catch (e) {
              console.log(e);
            }
          })
          .catch((error) => console.error(error));
      }

      function addFriend(element, id) {
        var params = {
          senderId: id,
        };
        fetch("http://localhost:3000/addRequest", {
          method: "POST",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            alertBox(data.Message);
            var grandParent = element.parentElement.parentElement;
            if (grandParent.classList.contains("addUser")) {
              grandParent.remove();
            }
          })
          .catch((error) => {
            alertBox("Invalid Query");
          });
      }

      function removeFriend(element, id) {
        var grandParent = element.parentElement.parentElement;
        if (grandParent.classList.contains("addUser")) {
          grandParent.remove();
        }
      }

      function confirmReq(element, id) {
        var params = {
          senderId: id,
        };

        fetch("http://localhost:3000/responseRequest", {
          method: "PUT",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.Message) {
              alertBox(data.Message);
              var grandParent = element.parentElement.parentElement;
              if (grandParent.classList.contains("friendRequest")) {
                grandParent.remove();
              }
            }
          })
          .catch((error) => {
            alertBox("Invalid Query");
          });
      }

      function removeReq(element, id) {
        var params = {
          senderId: id,
        };

        fetch("http://localhost:3000/removeRequest", {
          method: "DELETE",
          body: JSON.stringify(params),
          headers: { "Content-Type": "application/json" },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.Message) {
              alertBox(data.Message);
              var grandParent = element.parentElement.parentElement;
              if (grandParent.classList.contains("friendRequest")) {
                grandParent.remove();
              }
            }
          })
          .catch((error) => {
            alertBox("Invalid Query");
          });
      }
    </script>
  </body>
</html>
